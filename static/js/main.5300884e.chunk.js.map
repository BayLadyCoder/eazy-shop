{"version":3,"sources":["state/actions.ts","components/CartItem/CartItem.styles.ts","components/CartItem/CartItem.tsx","components/Cart/Cart.styles.ts","components/Cart/Cart.tsx","App.styles.ts","components/Item/Item.styles.ts","components/Item/Item.tsx","App.tsx","state/reducers.ts","index.tsx"],"names":["API_GET_ALL_PRODUCTS_SUCCESS","ADD_ITEM_TO_CART","REMOVE_ITEM_FROM_CART","addToCart","item","type","payload","Wrapper","styled","div","CartItem","dispatch","useDispatch","imgURL","image","slice","title","className","price","IconButton","onClick","id","amount","toFixed","src","alt","aside","Cart","cartItems","total","reduce","acc","length","map","Button","fullWidth","color","variant","StyledButton","Item","description","App","useState","isCartOpen","setIsCartOpen","products","useSelector","state","items","cart","useEffect","a","fetch","res","json","data","console","log","message","Drawer","anchor","open","onClose","Badge","badgeContent","getTotalItems","Grid","container","spacing","xs","sm","LinearProgress","ProductInitialState","isLoading","CartInitialState","rootReducer","combineReducers","action","newStateItems","isItemInCart","find","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5300884e.chunk.js","sourcesContent":["import { ThunkAction } from 'redux-thunk'\nimport { Action } from 'redux'\n\n// Types\nimport { CartItemType, AppState } from '../Types'\n\n// Action Types\nexport const API_GET_ALL_PRODUCTS_SUCCESS: string = \"API_GET_ALL_PRODUCTS_SUCCESS\";\nexport const API_GET_ALL_PRODUCTS_FAIL: string = \"API_GET_ALL_PRODUCTS_FAIL\";\nexport const ADD_ITEM_TO_CART: string = \"ADD_ITEM_TO_CART\";\nexport const REMOVE_ITEM_FROM_CART: string = \"REMOVE_ITEM_FROM_CART\";\n\n\n\nexport const addToCart = (item: CartItemType) => ({\n    type: ADD_ITEM_TO_CART,\n    payload: item\n})\n\nexport const removeItemFromCart = (id: number) => ({\n    type: REMOVE_ITEM_FROM_CART,\n    payload: id\n})\n\n\n\n// API calls\nexport const apiGetAllProducts = (): ThunkAction<void, AppState, unknown, Action<string>> => async (dispatch) => {\n\n    try {\n        const res = await fetch(\"https://fakestoreapi.herokuapp.com/products\");\n        const data: CartItemType[] = await res.json();\n        dispatch({ type: API_GET_ALL_PRODUCTS_SUCCESS, payload: data })\n    } catch (error) {\n        console.log(error.message)\n        // return ({ type: API_GET_ALL_PRODUCTS_FAIL, payload: error })\n\n    }\n\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 1px solid #cccccc;\n  padding-bottom: 20px;\n  color: #383838;\n\n  h3 {\n    font-size: 18px;\n  }\n\n  div {\n    flex: 1;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .information {\n    display: flex;\n    justify-content: space-between;\n  }\n  .buttons {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .icon-button {\n    background-color: #f50057;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n  }\n\n  .icon-button:hover {\n    background-color: #c90248;\n    /* border-radius: 50%;\n    width: 40px;\n    height: 40px; */\n  }\n\n  .button {\n    border-radius: 50%;\n  }\n\n  img {\n    max-width: 100px;\n    object-fit: contain;\n    margin-left: 40px;\n  }\n\n  .icon {\n    font-size: 18px;\n    color: #ffffff;\n    font-weight: bold;\n  }\n  .amount {\n    margin: 0 14px;\n  }\n\n  .price-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  .total-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n\n  .price,\n  .total {\n    margin-bottom: 10px;\n    color: #7a7a7a;\n    font-size: 14px;\n  }\n`;\n","import { CartItemType } from \"../../Types\";\nimport { Wrapper } from \"./CartItem.styles\";\nimport { useDispatch } from \"react-redux\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { addToCart, removeItemFromCart } from \"../../state/actions\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\ntype Props = {\n  item: CartItemType;\n};\n\nconst CartItem: React.FC<Props> = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const imgURL: string =\n    item.image.slice(0, 21) + \"herokuapp.\" + item.image.slice(21);\n\n  return (\n    <Wrapper>\n      <div>\n        <h3>{item.title}</h3>\n        <div className=\"information\">\n          <div className=\"price-container\">\n            <p className=\"price\">Price</p>\n            <p>${item.price}</p>\n          </div>\n          <div className=\"buttons\">\n            <IconButton\n              className=\"icon-button\"\n              onClick={() => dispatch(removeItemFromCart(item.id))}\n            >\n              <RemoveIcon className=\"icon\" />\n            </IconButton>\n            <p className=\"amount\">{item.amount}</p>\n\n            <IconButton\n              className=\"icon-button\"\n              onClick={() => dispatch(addToCart(item))}\n            >\n              <AddIcon className=\"icon\" />\n            </IconButton>\n          </div>\n          <div className=\"total-container\">\n            <p className=\"total\">Total</p>\n            <p>${(item.price * item.amount).toFixed(2)}</p>\n          </div>\n        </div>\n      </div>\n      <img src={imgURL} alt={item.title} />\n    </Wrapper>\n  );\n};\n\nexport default CartItem;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 320px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  color: #383838;\n\n  @media screen and (min-width: 600px) {\n    width: 500px;\n  }\n\n  .checkout-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .checkout-button {\n    /* font-weight: bold; */\n  }\n\n  .checkout-total {\n    /* color: red; */\n    font-weight: normal;\n  }\n`;\n","import CartItem from \"../CartItem/CartItem\";\nimport { Wrapper } from \"./Cart.styles\";\nimport { CartItemType } from \"../../Types\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props = {\n  cartItems: CartItemType[];\n};\n\nconst Cart: React.FC<Props> = ({ cartItems }) => {\n  const total = cartItems.reduce((acc, item) => {\n    return acc + item.price * item.amount;\n  }, 0);\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length > 0 ? (\n        cartItems.map((item) => <CartItem key={item.id} item={item} />)\n      ) : (\n        <p>Cart is empty.</p>\n      )}\n      <div className=\"checkout-container\">\n        <h3 className=\"checkout-total\">Total*: ${total}</h3>\n        <Button\n          fullWidth\n          className=\"checkout-button\"\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Checkout\n        </Button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n","import styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport const Wrapper = styled.div`\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0px 30px 30px 30px;\n  color: #383838;\n\n  h1 {\n    /* text-align: center; */\n    font-family: \"Lobster\", cursive;\n    font-family: \"Train One\", cursive;\n    font-size: 2.6rem;\n    margin: 0px;\n    margin-bottom: 20px;\n    color: #303f9f;\n  }\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed !important;\n  z-index: 100;\n  right: 30px;\n  top: 20px;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid #cccccc;\n  border-radius: 20px;\n  height: 100%;\n  color: #383838;\n\n  img {\n    margin-top: 1.5rem;\n    max-height: 200px;\n    object-fit: contain;\n    border-radius: 20px 20px 0 0;\n  }\n\n  div {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1.5rem;\n    height: 100%;\n  }\n\n  .item-title {\n    font-weight: bold;\n  }\n\n  .item-description {\n    color: #7d7d7d;\n  }\n\n  .item-price {\n    font-size: 1.3rem;\n    font-weight: ;\n  }\n`;\n","import { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport { addToCart } from \"../../state/actions\";\n// Types\nimport { CartItemType } from \"../../Types\";\n\n// Styles\nimport { Wrapper } from \"./Item.styles\";\n\ntype Props = {\n  item: CartItemType;\n  // handleAddToCart: (item: CartItemType) => void;\n};\n\nconst Item: React.FC<Props> = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const imgURL = item.image.slice(0, 21) + \"herokuapp.\" + item.image.slice(21);\n  return (\n    <Wrapper>\n      <img src={imgURL} alt={item.title} />\n      <div>\n        <p className=\"item-title\">{item.title}</p>\n        <p className=\"item-description\">{item.description}</p>\n        <p className=\"item-price\">${item.price}</p>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => dispatch(addToCart(item))}\n      >\n        Add to Cart\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Item;\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { apiGetAllProducts } from \"./state/actions\";\n// Components\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Cart from \"./components/Cart/Cart\";\n// Styles\nimport { StyledButton, Wrapper } from \"./App.styles\";\nimport Item from \"./components/Item/Item\";\n//Types\nimport { CartItemType, AppState } from \"./Types\";\n\nconst App: React.FC = () => {\n  const [isCartOpen, setIsCartOpen] = useState<boolean>(false);\n  const products = useSelector((state: AppState) => state.products.products);\n  const items = useSelector((state: AppState) => state.cart.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(apiGetAllProducts());\n  }, [dispatch]);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((acc: number, item) => acc + item.amount, 0);\n\n  if (!items) return <LinearProgress />;\n\n  return (\n    <Wrapper>\n      <h1>Eazy Shop</h1>\n      <Drawer\n        anchor=\"right\"\n        open={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n      >\n        <Cart cartItems={items} />\n      </Drawer>\n      <StyledButton onClick={() => setIsCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(items)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {products?.map((item: CartItemType) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {\n    API_GET_ALL_PRODUCTS_SUCCESS,\n    // API_GET_ALL_PRODUCTS_FAIL,\n    ADD_ITEM_TO_CART,\n    REMOVE_ITEM_FROM_CART,\n} from './actions'\n\n// Types\nimport { CartItemType, ProductState, CartState, Actions } from '../Types'\n\n\nconst ProductInitialState = {\n    products: [],\n    isLoading: true\n}\nconst CartInitialState = {\n    items: [],\n}\n\n\n\nexport const productReducer = (state: ProductState = ProductInitialState, action: Actions): ProductState => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case API_GET_ALL_PRODUCTS_SUCCESS:\n            return { products: payload, isLoading: false }\n        default:\n            return state\n\n    }\n}\n\n\n\nexport const cartReducer = (state: CartState = CartInitialState, action: Actions): CartState => {\n    const { type, payload } = action;\n    let newStateItems: CartItemType[];\n\n    switch (type) {\n        case ADD_ITEM_TO_CART:\n            const isItemInCart = state.items.find((item) => item.id === payload?.id);\n            if (isItemInCart) {\n                newStateItems = state.items.map((item) => {\n                    if (item.id === payload?.id) {\n                        return { ...item, amount: item.amount + 1 };\n                    } else {\n                        return item;\n                    }\n                });\n            } else {\n                newStateItems = [...state.items, { ...payload, amount: 1 }];\n            }\n            return { ...state, items: newStateItems }\n        case REMOVE_ITEM_FROM_CART:\n            newStateItems = state.items.reduce((acc: CartItemType[], item: CartItemType) => {\n                if (item.id === payload) {\n                    if (item.amount === 0) {\n                        return acc;\n                    } else {\n                        return [...acc, { ...item, amount: item.amount - 1 }];\n                    }\n                } else {\n                    return [...acc, item];\n                }\n            }, [] as CartItemType[])\n            return { ...state, items: newStateItems }\n        default:\n            return state\n\n    }\n}\n\n\n\n\n\nconst rootReducer = combineReducers({\n    products: productReducer,\n    cart: cartReducer\n})\n\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./state/reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}